(
~makeCurvesFunc = ({ arg numCurves=8, partNum=4, startScene=0, startPoint = -0.8, spacing=0.1, spacingInc=1.0, spacingRand=0.0, xSize=[0.02, 0.04], ySize=[0.03, 0.05], yRand=1.0;
	var spacingVar = spacing;
	var spacingIncVar = spacingInc;

	partNum = partNum + 1; // we don't want space zero (at top of screen: gridParts uses top and bottom spaces)

	numCurves.do({|i|

		startPoint = startPoint * (1 + (rrand(spacingRand.neg, spacingRand)));

		~curveSizeY=rrand(0.025, 0.1);
		~curveSizeX=rrand(0.15, 0.2);
		~unthinking.curve("unthinkingWin", (i+startScene), [rrand(~curveSizeX.neg, ~curveSizeX), rrand(~curveSizeY.neg, ~curveSizeY), rrand(~curveSizeX.neg, ~curveSizeX), rrand(~curveSizeY.neg, ~curveSizeY), rrand(~curveSizeX.neg, ~curveSizeX), rrand(~curveSizeY.neg, ~curveSizeY), rrand(~curveSizeX.neg, ~curveSizeX), rrand(~curveSizeY.neg, ~curveSizeY)]);

		//~unthinkingCurve[i][16].postln;

		~unthinking.pen("unthinkingWin", "curve", (i+startScene), penColor: [0,0,0,255], penAlpha: 255, penWidth: ~unthinkingCurve[i][16], penStyle: "solid");
		~unthinking.brush("unthinkingWin", "curve", (i+startScene), "none");
		~unthinking.move("unthinkingWin", "curve", (i+startScene), startPoint + (i*0.09), ~gridParts[partNum], zPos: 2);
		~unthinking.scale("unthinkingWin", "curve", (i+startScene), 0.7);

		spacingVar = spacingVar * spacingIncVar;
	});
});
)

/*
~unthinkingCurve[3][16]
*/